# This is a basic workflow to help you get started with Actions

name: MM-TEST-ROBOT-CACHE

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  BRANCH: mm-unstable
  REPO: https://github.com/ioworker0/linux.git


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
        with:
          path: rebot

      - name: system resources
        run: |      
          uname -r
          uname -m
          echo $(nproc)
          free -h
          
      - uses: actions/cache@v4
        id: repo-cache
        with:
          path: .
          key: linux
    
      - name: clone repo
        if: steps.repo-cache.outputs.cache-hit != 'true'
        run: |
          git clone -v ${{ env.REPO }} linux
          
      - name: pre-clean up
        run: |
          ls -l
          cd linux
          if git rev-parse --verify ${{ env.BRANCH }} >/dev/null 2>&1; then
            git branch -D ${{ env.BRANCH }}
          else
              echo "Branch ${{ env.BRANCH }} does not exist."
          fi
          make clean
          rm -rf .config
          
      - name: pull branch
        run: |
          cd linux
          git pull
          git checkout ${{ env.BRANCH }} && git pull

      # - name: build kerne   
      #   run: |  
      #     cd linux
      #     make ARCH=arm64 mrproper
      #     make ARCH=arm64 allnoconfig
      #     export ARCH=arm64
      #     export CROSS_COMPILE="/usr/bin/aarch64-linux-gnu-"
      #     make olddefconfig
      #     make -j$(nproc)
